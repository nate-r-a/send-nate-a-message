<head>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

  <!-- <link type="text/javascript" href="jquery-3.2.1.min.js"> -->
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/milligram/1.3.0/milligram.css">

  <script src="https://unpkg.com/konva@2.4.2/konva.min.js"></script>
  <%# <%= javascript_include_tag('canvas-dither.js') %> %>

  <style media="screen">
    .konvajs-content {
      margin: 0 auto;
    }

    canvas {
      outline: 2px solid black;
    }
  </style>

</head>
<body style="text-align: center; touch-action: none;">
  <% flash.each do |key, value| %>
    <div class="alert alert-<%= key %>"><%= value %></div>
  <% end %>

  <h1>Send Nate a message!</h1>
  <h6>Please don't hack me</h6>
  <br>
  <input id="text-message" type="text" name="" value="" placeholder="Enter a text message here" style="width: 500px;">
  <br>
  <div class="draw-a-picture" style="display: none">
    Tool:
    <select style="width: 100px;" id="tool">
      <option value="brush">Brush</option>
      <!-- <option value="eraser">Eraser</option> -->
    </select>
    <div id="container"></div>
    <script>
      var width = 500;
      var height = 500;

      // first we need Konva core things: stage and layer
      var stage = new Konva.Stage({
        container: 'container',
        width: width,
        height: height
      });

      var layer = new Konva.Layer();
      stage.add(layer);


      // then we are going to draw into special canvas element
      var canvas = document.createElement('canvas');
      canvas.width = stage.width();
      canvas.height = stage.height();

      // created canvas we can add to layer as "Konva.Image" element
      var image = new Konva.Image({
        image: canvas,
        x: 0,
        y: 0
      });
      layer.add(image);
      stage.draw();

      // Good. Now we need to get access to context element
      var context = canvas.getContext('2d');
      context.fillStyle = "#ffffff";
      context.fillRect(0, 0, canvas.width, canvas.height);
      context.strokeStyle = "#000";
      context.lineJoin = "round";
      context.lineWidth = 5;


      var isPaint = false;
      var lastPointerPosition;
      var mode = 'brush';


      // now we need to bind some events
      // we need to start drawing on mousedown
      // and stop drawing on mouseup
      image.on('mousedown touchstart', function () {
        isPaint = true;
        lastPointerPosition = stage.getPointerPosition();

      });

      // will it be better to listen move/end events on the window?

      stage.addEventListener('mouseup touchend', function () {
        isPaint = false;
      });

      stage.addEventListener('mouseout', function() {
        isPaint = false;
      });

      // and core function - drawing
      stage.addEventListener('mousemove touchmove', function () {
        if (!isPaint) {
          return;
        }

        if (mode === 'brush') {
          context.globalCompositeOperation = 'source-over';
        }
        if (mode === 'eraser') {
          context.globalCompositeOperation = 'destination-out';
        }
        context.beginPath();

        var localPos = {
          x: lastPointerPosition.x - image.x(),
          y: lastPointerPosition.y - image.y()
        };
        context.moveTo(localPos.x, localPos.y);
        var pos = stage.getPointerPosition();
        localPos = {
          x: pos.x - image.x(),
          y: pos.y - image.y()
        };
        context.lineTo(localPos.x, localPos.y);
        context.closePath();
        context.stroke();


        lastPointerPosition = pos;
        layer.batchDraw();
      });



      var select = document.getElementById('tool');
      select.addEventListener('change', function () {
        mode = select.value;
      });

    </script>
  </div>
  <div class="upload-a-picture">
    <label>Upload an image:</label><br/>
    <input type="file" id="imageLoader" name="imageLoader"/>
    <br>
    <canvas id="imageCanvas" width="500" height="500"></canvas>
    <script>
      var imageLoader = document.getElementById('imageLoader');
      imageLoader.addEventListener('change', handleImage, false);
      var canvas = document.getElementById('imageCanvas');
      var ctx = canvas.getContext('2d');

      function handleImage(e){
        var reader = new FileReader();
        reader.onload = function(event){
          var img = new Image();

          img.onload = function(){
            console.log(img.width);
            console.log(img.height);
            if (img.width > img.height) {
              let coeff = img.width / 500;
              img.width = 500;
              img.height = img.height / coeff;
              console.log(img.width);
              console.log(img.height);
            } else if (img.height > img.width) {
              let coeff = img.height / 500;
              img.height = 500;
              img.width = img.width / coeff;
              console.log(img.width);
              console.log(img.height);
            }

            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0, img.width, img.height);

            // Convert to gray here
            imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            var cd = new CanvasDither();
            grayImage = cd.grayscale(imageData)
            ctx.putImageData(grayImage, 0, 0);
          }
          img.src = event.target.result;
        }
        reader.readAsDataURL(e.target.files[0]);
      }
    </script>
  </div>

    <br>
    <input type="submit" name="submit" value="Send!" onclick="submitMessage()">

  </body>

  <script type="text/javascript">
    function submitMessage() {
      $.ajax({
        url: "/messages",
        type: "POST",
        data: { message: {
          text: $("#text-message").val(),
          image: canvas.toDataURL()
        }}
      })
    }
  </script>
